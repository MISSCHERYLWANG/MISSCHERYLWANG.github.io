<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>动态规划 on Jingxi&#39;s personal blog.</title>
    <link>https://misscherylwang.github.io/categories/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</link>
    <description>Recent content in 动态规划 on Jingxi&#39;s personal blog.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 06 Jul 2020 17:11:15 +0800</lastBuildDate>
    
	<atom:link href="https://misscherylwang.github.io/categories/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>918.Maximum Sum Circular Subarray-环形子数列中的最大元素和</title>
      <link>https://misscherylwang.github.io/post/lc918/</link>
      <pubDate>Mon, 06 Jul 2020 17:11:15 +0800</pubDate>
      
      <guid>https://misscherylwang.github.io/post/lc918/</guid>
      <description>问题描述 Given a circular array C of integers represented by A, find the maximum possible sum of a non-empty subarray of C. Here, a circular array means the end of the array connects to the beginning of the array. (Formally, C[i] = A[i] when 0 &amp;lt;= i &amp;lt; A.length, and C[i+A.length] = C[i] when i &amp;gt;= 0.) Also, a subarray may only include each element of the</description>
    </item>
    
    <item>
      <title>1477.Find Two Non-overlapping Sub-arrays Each With Target Sum-找出两个元素和为目标数且无交集的子数组</title>
      <link>https://misscherylwang.github.io/post/lc1477/</link>
      <pubDate>Sun, 28 Jun 2020 18:04:08 +0800</pubDate>
      
      <guid>https://misscherylwang.github.io/post/lc1477/</guid>
      <description>问题描述 Given an array of integers arr and an integer target. You have to find two non-overlapping sub-arrays of arr each with sum equal target. There can be multiple answers so you have to find an answer where the sum of the lengths of the two sub-arrays is minimum. Return the minimum sum of the lengths of the two required sub-arrays, or return -1 if you cannot</description>
    </item>
    
    <item>
      <title>1483. Kth Ancestor of a Tree Node-一个树结点的第K个祖先</title>
      <link>https://misscherylwang.github.io/post/lc1483/</link>
      <pubDate>Thu, 25 Jun 2020 23:46:45 +0800</pubDate>
      
      <guid>https://misscherylwang.github.io/post/lc1483/</guid>
      <description>问题说明 You are given a tree with n nodes numbered from 0 to n-1 in the form of a parent array where parent[i] is the parent of node i. The root of the tree is node 0. Implement the function getKthAncestor(int node, int k) to return the k-th ancestor of the given node. If there is no such ancestor, return -1. The k-th ancestor of a tree</description>
    </item>
    
    <item>
      <title>1277. Count Square Submatrices with All Ones-数出所有的全1方阵</title>
      <link>https://misscherylwang.github.io/post/leetcode1277/</link>
      <pubDate>Fri, 19 Jun 2020 17:41:18 +0800</pubDate>
      
      <guid>https://misscherylwang.github.io/post/leetcode1277/</guid>
      <description>问题描述 Given a m * n matrix of ones and zeros, return how many square submatrices have all ones. Example: Input: matrix = [ [0,1,1,1], [1,1,1,1], [0,1,1,1] ] Output: 15 从上面的栗子可以看出方形子矩阵边为1的有10个，边为2的有4个，边为3的有</description>
    </item>
    
  </channel>
</rss>